#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã Device —Å –Ω–æ–≤—ã–º –ø–æ–ª–µ–º client_ip
"""

from app import app, db, Device

def recreate_device_table():
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É Device —Å –Ω–æ–≤—ã–º –ø–æ–ª–µ–º client_ip"""
    with app.app_context():
        try:
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É
            Device.__table__.drop(db.engine, checkfirst=True)
            print("üóëÔ∏è –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ Device —É–¥–∞–ª–µ–Ω–∞")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
            db.create_all()
            print("‚úÖ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ Device —Å–æ–∑–¥–∞–Ω–∞ —Å –ø–æ–ª–µ–º client_ip")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            device_count = Device.query.count()
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ –±–∞–∑–µ: {device_count}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã Device: {e}")

if __name__ == '__main__':
    recreate_device_table()