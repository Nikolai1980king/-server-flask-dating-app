#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ª–∞–π–∫–∞–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os
from datetime import datetime

def fix_likes_database():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ª–∞–π–∫–∞–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –ª–∞–π–∫–∞–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    db_path = 'instance/dating_app.db'
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # 1. –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –ª–∞–π–∫–∏
        print("üßπ –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ª–∞–π–∫–æ–≤...")
        
        # –ù–∞—Ö–æ–¥–∏–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –ª–∞–π–∫–∏
        cursor.execute("""
            SELECT user_id, liked_id, COUNT(*) as count
            FROM like
            GROUP BY user_id, liked_id
            HAVING COUNT(*) > 1
        """)
        duplicates = cursor.fetchall()
        
        if duplicates:
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(duplicates)} –≥—Ä—É–ø–ø –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ª–∞–π–∫–æ–≤:")
            for duplicate in duplicates:
                print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {duplicate[0]} –ª–∞–π–∫–Ω—É–ª {duplicate[1]} {duplicate[2]} —Ä–∞–∑")
            
            # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –ª–∞–π–∫–∏, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω
            for duplicate in duplicates:
                user_id, liked_id, count = duplicate
                # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –ª–∞–π–∫, —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
                cursor.execute("""
                    DELETE FROM like 
                    WHERE user_id = ? AND liked_id = ? 
                    AND id NOT IN (
                        SELECT MIN(id) 
                        FROM like 
                        WHERE user_id = ? AND liked_id = ?
                    )
                """, (user_id, liked_id, user_id, liked_id))
            
            deleted_count = cursor.rowcount
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_count} –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ª–∞–π–∫–æ–≤")
        else:
            print("‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏—Ö –ª–∞–π–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # 2. –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ª–∞–π–∫–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª—è—Ö
        print("üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ –ª–∞–π–∫–æ–≤...")
        
        cursor.execute("SELECT id FROM profile")
        profiles = cursor.fetchall()
        
        updated_count = 0
        for profile in profiles:
            profile_id = profile[0]
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
            cursor.execute("SELECT COUNT(*) FROM like WHERE liked_id = ?", (profile_id,))
            likes_count = cursor.fetchone()[0]
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
            cursor.execute("UPDATE profile SET likes = ? WHERE id = ?", (likes_count, profile_id))
            if cursor.rowcount > 0:
                updated_count += 1
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø—Ä–æ—Ñ–∏–ª–µ–π")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ª–∞–π–∫–∏ —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏
        cursor.execute("""
            SELECT COUNT(*) FROM like l
            LEFT JOIN profile p ON l.user_id = p.id
            WHERE p.id IS NULL
        """)
        orphaned_user_likes = cursor.fetchone()[0]
        
        cursor.execute("""
            SELECT COUNT(*) FROM like l
            LEFT JOIN profile p ON l.liked_id = p.id
            WHERE p.id IS NULL
        """)
        orphaned_liked_likes = cursor.fetchone()[0]
        
        if orphaned_user_likes > 0:
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {orphaned_user_likes} –ª–∞–π–∫–æ–≤ –æ—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            # –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ –æ—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            cursor.execute("""
                DELETE FROM like WHERE user_id NOT IN (SELECT id FROM profile)
            """)
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {cursor.rowcount} –ª–∞–π–∫–æ–≤ –æ—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        if orphaned_liked_likes > 0:
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {orphaned_liked_likes} –ª–∞–π–∫–æ–≤ –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏")
            # –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏
            cursor.execute("""
                DELETE FROM like WHERE liked_id NOT IN (SELECT id FROM profile)
            """)
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {cursor.rowcount} –ª–∞–π–∫–æ–≤ –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏")
        
        # 4. –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        print("üîí –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞...")
        
        try:
            cursor.execute("""
                CREATE UNIQUE INDEX IF NOT EXISTS unique_user_like 
                ON like (user_id, liked_id)
            """)
            print("‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω/–ø—Ä–æ–≤–µ—Ä–µ–Ω")
        except sqlite3.IntegrityError as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞: {e}")
        
        # 5. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute("SELECT COUNT(*) FROM like")
        total_likes = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM profile")
        total_profiles = cursor.fetchone()[0]
        
        print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  - –í—Å–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {total_profiles}")
        print(f"  - –í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤: {total_likes}")
        
        conn.commit()
        conn.close()
        
        print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        if 'conn' in locals():
            conn.rollback()
            conn.close()

def show_likes_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–∞–π–∫–æ–≤"""
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–∞–π–∫–æ–≤:")
    print("=" * 40)
    
    db_path = 'instance/dating_app.db'
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute("SELECT COUNT(*) FROM like")
        total_likes = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM profile")
        total_profiles = cursor.fetchone()[0]
        
        print(f"üìà –í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤: {total_likes}")
        print(f"üë• –í—Å–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {total_profiles}")
        
        # –¢–æ–ø –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ –ª–∞–π–∫–∞–º
        cursor.execute("""
            SELECT p.name, p.likes, p.id
            FROM profile p
            ORDER BY p.likes DESC
            LIMIT 10
        """)
        top_profiles = cursor.fetchall()
        
        if top_profiles:
            print(f"\nüèÜ –¢–æ–ø-10 –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ –ª–∞–π–∫–∞–º:")
            for i, profile in enumerate(top_profiles, 1):
                print(f"  {i}. {profile[0]} (ID: {profile[2]}) - {profile[1]} –ª–∞–π–∫–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ª–∞–π–∫–æ–≤
        cursor.execute("""
            SELECT user_id, liked_id, COUNT(*) as count
            FROM like
            GROUP BY user_id, liked_id
            HAVING COUNT(*) > 1
        """)
        duplicates = cursor.fetchall()
        
        if duplicates:
            print(f"\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(duplicates)} –≥—Ä—É–ø–ø –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ª–∞–π–∫–æ–≤:")
            for duplicate in duplicates:
                print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {duplicate[0]} –ª–∞–π–∫–Ω—É–ª {duplicate[1]} {duplicate[2]} —Ä–∞–∑")
        else:
            print(f"\n‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏—Ö –ª–∞–π–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

def main():
    import sys
    
    if len(sys.argv) < 2:
        print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –ª–∞–π–∫–∞–º–∏")
        print("=" * 40)
        print("–ö–æ–º–∞–Ω–¥—ã:")
        print("  fix     - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ª–∞–π–∫–∞–º–∏")
        print("  stats   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–∞–π–∫–æ–≤")
        print("  help    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
        return
    
    command = sys.argv[1].lower()
    
    if command == 'fix':
        fix_likes_database()
    elif command == 'stats':
        show_likes_statistics()
    elif command == 'help':
        print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –ª–∞–π–∫–∞–º–∏")
        print("=" * 40)
        print("–ö–æ–º–∞–Ω–¥—ã:")
        print("  fix     - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ª–∞–π–∫–∞–º–∏")
        print("  stats   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–∞–π–∫–æ–≤")
        print("  help    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
    else:
        print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python fix_likes_database.py help")

if __name__ == '__main__':
    main() 