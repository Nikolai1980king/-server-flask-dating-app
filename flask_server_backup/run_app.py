#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º –ø–æ—Ä—Ç–∞
"""

import socket
import subprocess
import sys
import time

def find_free_port(start_port=5000, max_attempts=10):
    """–ù–∞—Ö–æ–¥–∏—Ç —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç –Ω–∞—á–∏–Ω–∞—è —Å start_port"""
    for port in range(start_port, start_port + max_attempts):
        try:
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                s.bind(('localhost', port))
                return port
        except OSError:
            continue
    return None

def kill_process_on_port(port):
    """–£–±–∏–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç"""
    try:
        result = subprocess.run(['lsof', '-ti', f':{port}'], 
                              capture_output=True, text=True)
        if result.stdout.strip():
            pids = result.stdout.strip().split('\n')
            for pid in pids:
                if pid:
                    subprocess.run(['kill', '-9', pid])
                    print(f"–ü—Ä–æ—Ü–µ—Å—Å {pid} –Ω–∞ –ø–æ—Ä—Ç—É {port} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 5000
    port = 5000
    print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç {port}...")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç 5000
    kill_process_on_port(5000)
    time.sleep(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤–æ–±–æ–¥–µ–Ω –ª–∏ –ø–æ—Ä—Ç
    free_port = find_free_port(5000, 5)
    
    if free_port == 5000:
        print("‚úÖ –ü–æ—Ä—Ç 5000 —Å–≤–æ–±–æ–¥–µ–Ω")
        port = 5000
    else:
        print(f"‚ö†Ô∏è  –ü–æ—Ä—Ç 5000 –∑–∞–Ω—è—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç {free_port}")
        port = free_port
    
    print(f"üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:{port}")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        # –ò–∑–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç –≤ app.py –≤—Ä–µ–º–µ–Ω–Ω–æ
        with open('app.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç –≤ —Å—Ç—Ä–æ–∫–µ –∑–∞–ø—É—Å–∫–∞
        new_content = content.replace(
            "socketio.run(app, host='0.0.0.0', port=5000, debug=True, allow_unsafe_werkzeug=True)",
            f"socketio.run(app, host='0.0.0.0', port={port}, debug=True, allow_unsafe_werkzeug=True)"
        )
        
        with open('app.py', 'w', encoding='utf-8') as f:
            f.write(new_content)
        
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
        subprocess.run([sys.executable, 'app.py'])
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")

if __name__ == "__main__":
    main() 