#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü —Å–∏—Å—Ç–µ–º—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤
"""

import sqlite3
import os

def update_device_tables():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—ã device_control –∏ ip_control"""
    
    db_path = 'dating_app.db'
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü —Å–∏—Å—Ç–µ–º—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='device_control'")
        device_table_exists = cursor.fetchone() is not None
        
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='ip_control'")
        ip_table_exists = cursor.fetchone() is not None
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if device_table_exists:
            print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã device_control...")
            cursor.execute("DROP TABLE device_control")
        
        if ip_table_exists:
            print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã ip_control...")
            cursor.execute("DROP TABLE ip_control")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        print("üì± –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã device_control...")
        cursor.execute('''
            CREATE TABLE device_control (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                device_fingerprint VARCHAR UNIQUE NOT NULL,
                profile_id VARCHAR NOT NULL,
                ip_address VARCHAR NOT NULL,
                user_agent VARCHAR,
                is_mobile BOOLEAN DEFAULT 0,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        print("üåê –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã ip_control...")
        cursor.execute('''
            CREATE TABLE ip_control (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                ip_address VARCHAR UNIQUE NOT NULL,
                profile_id VARCHAR NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        conn.commit()
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã device_control:")
        cursor.execute("PRAGMA table_info(device_control)")
        columns = cursor.fetchall()
        for col in columns:
            print(f"  - {col[1]} ({col[2]})")
        
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã ip_control:")
        cursor.execute("PRAGMA table_info(ip_control)")
        columns = cursor.fetchall()
        for col in columns:
            print(f"  - {col[1]} ({col[2]})")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}")
        if 'conn' in locals():
            conn.rollback()
            conn.close()
        return False

if __name__ == '__main__':
    success = update_device_tables()
    if success:
        print("\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–µ—Ä–≤–µ—Ä: python app.py")
    else:
        print("\nüí• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")